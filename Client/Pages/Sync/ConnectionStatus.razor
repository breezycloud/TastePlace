@*@inject Synchronizer DataSynchronizer*@
@implements IAsyncDisposable

@if (IsOnline)
{
    @Online
}
else
{
    @Offline
}

@code {
    [Parameter]
    public RenderFragment Online { get; set; } = default!;

    [Parameter]
    public RenderFragment Offline { get; set; } = default!;
    public bool IsOnline { get; set; }

    [JSInvokable("Connection.StatusChanged")]
    public void OnConnectionStatusChanged(bool isOnline)
    {
        if (IsOnline != isOnline)
        {
            IsOnline = isOnline;
        }      
        LayoutService.OnMajorUpdateOccured(); 
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        await js.InvokeVoidAsync("Connection.Initialize", DotNetObjectReference.Create(this));
    }

    public async ValueTask DisposeAsync() {
        await js.InvokeVoidAsync("Connection.Dispose");        
    }    
       
}

